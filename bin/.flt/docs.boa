### add a command, subcommand, and two run commands

### top level command
#command
#	name: new
#	short: Create a new application

### subcommand of new (based on "stack")
#command
#	name: dotnet
#	short: Create a new dotnet 6 application

### run command of new dotnet (based on "stack")
#runCommand
#	path: /new/dotnet-webapi

### run command of new dotnet (based on "stack")
#runCommand
	path: /new/dotnet-console

### you can use popCommand to pop the command's parent
### you can also specify the parent by name in the command
### popCommand on rootCommand has no affect
### alternative: use parent: commandName
### using the above example, the parent would now be "new" instead of "new dotnet" (based on "stack")
#popCommand

### this will add a local command to the current command
### name: and short: are read from the command file if not specified
### command file takes precedence
### location is relative to .kic/commands
### using the above example, the parent would now be "new" (based on "stack")
#runCommand
#	path: groups

### this will add a fleet command to the current command
### name: and short: are read from the command file if not specified
### command file takes precedence
### location is relative to cli/vm/scripts
### using the above example, the parent would now be "new" (based on "stack")
#fltCommand
#        path: curl
#        name: curl
#        short: curl the specified endpoint on each cluster

### this will let you set the root to any top level command (current or eventual)
### the command can be internal or external
### the "stack" must be at the rootCommand level
### you will get a runtime error if the command doesn't exist in rootCommand
#command
#	name: new__root
#	short: fleet

### this will disable a command (current or eventual)
### hidden commands are removed at runtime and will not execute
### this is "stack" dependent
#command
#	name: fleet
#	hidden: true
#	parent: rootCmd
